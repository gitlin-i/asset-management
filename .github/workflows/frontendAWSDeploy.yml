name: frontend/AWSDeploy

# Docker Image가 새로 저장되면 실행
on:
  workflow_run:
    workflows: [frontendDocker]
    types:
      - completed

env:
  EB_DEPLOYMENT_PACKAGE: docker-compose.yml
  EB_ENVIRONMENT_NAME: Assets-env
  EB_APPLICATION_NAME: assets
jobs:
  awsDeploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: dockerCompose download
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            ./asset-management/docker-compose.yml
          sparse-checkout-cone-mode: false

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      # Install AWS CLI 2
      # - name: Install AWS CLI 2
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     which aws
      #     sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      # - name: Install AWS CLI
      #   run: |
      #     pip install --upgrade pip
      #     pip install awscli

      # - name: Deploy to EB
      #   run: |
      #     aws elasticbeanstalk create-application-version --region ${{ env.AWS_REGION }} --application-name <application_name> --version-label <version_label> --source-bundle S3Bucket=<s3_bucket>,S3Key=<s3_key>
      #     aws elasticbeanstalk update-environment --region ${{ env.AWS_REGION }} --environment-name <environment_name> --version-label <version_label>
      # Deploy to Elastic Beanstalk

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          region: ${{ secrets.AWS_REGION }}
          deployment-package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: myApp.${{github.sha}}
